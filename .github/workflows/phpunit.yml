name: PHPUnit Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: devops_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql, mysqli, xdebug
          coverage: xdebug

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Load environment variables
        run: |
          echo "Loading environment variables from .env"
          export $(cat .env | grep -v ^# | xargs)

      - name: Debug PHPUnit version
        run: ./vendor/bin/phpunit --version

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -P 3306 -u root --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "MySQL not ready yet, waiting..."
            sleep 2
          done

      - name: Create article table
        run: |
          mysql -h 127.0.0.1 -P 3306 -u root devops_db -e "CREATE TABLE IF NOT EXISTS article (id INT AUTO_INCREMENT PRIMARY KEY, ref VARCHAR(50) NOT NULL, nom VARCHAR(255) NOT NULL, prixUnitaire DECIMAL(10,2) NOT NULL, qte INT NOT NULL);"

      - name: Configure database
        run: |
          echo "Setting up database connection"
          echo "database.default.hostname = $database_default_hostname" >> .env
          echo "database.default.username = $database_default_username" >> .env
          echo "database.default.password = $database_default_password" >> .env
          echo "database.default.database = $database_default_database" >> .env
          echo "database.default.DBDriver = $database_default_DBDriver" >> .env
          echo "database.default.port = $database_default_port" >> .env
          echo "database.tests.hostname = $database_tests_hostname" >> .env
          echo "database.tests.username = $database_tests_username" >> .env
          echo "database.tests.password = $database_tests_password" >> .env
          echo "database.tests.database = $database_tests_database" >> .env
          echo "database.tests.DBDriver = $database_tests_DBDriver" >> .env
          echo "database.tests.port = $database_tests_port" >> .env

      - name: Run migrations
        run: php spark migrate --all
        continue-on-error: true

      - name: Run PHPUnit tests
        run: ./vendor/bin/phpunit --coverage-text tests/ArticleModelTest.php
